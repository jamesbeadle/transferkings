type Result_1 = 
 variant {
   err: Error;
   ok: AppStatusDTO;
 };
type Result = 
 variant {
   err: Error;
   ok: Profile;
 };
type Profile = 
 record {
   createdOn: int;
   principalId: PrincipalId;
   profilePicture: blob;
   profilePictureExtension: text;
   termsAgreed: bool;
   username: text;
 };
type PrincipalId = text;
type Error = 
 variant {
   AlreadyExists;
   DecodeError;
   InvalidData;
   NotAllowed;
   NotAuthorized;
   NotEnoughFunds;
   NotFound;
   PaymentError;
 };
type AppStatusDTO = 
 record {
   onHold: bool;
   version: text;
 };
service : {
  getAppStatus: () -> (Result_1) query;
  getProfile: () -> (Result) query;
}
